import 'dart:async';import 'package:flutter/material.dart';import 'package:flutter_blue/flutter_blue.dart';import 'service.dart';import 'package:cloud_firestore/cloud_firestore.dart';import 'package:fireuser/page_bluetooth/service.dart';import 'package:fireuser/page_bluetooth/characteristic.dart';import 'package:cron/cron.dart';class PageBluetooth extends StatelessWidget {  @override  Widget build(BuildContext context) {    // alldata.insert(0, '0'); //初始化值    // allID.insert(0, '0');    return MaterialApp(      debugShowCheckedModeBanner: false,      darkTheme: ThemeData.dark(),      home: StreamBuilder<BluetoothState>(//藍芽狀態        stream: FlutterBlue.instance.state,        initialData: BluetoothState.unknown,        builder: (c, snapshot) {          final state = snapshot.data;          if (state == BluetoothState.on) {            return FindDevicesScreen(); //開啟藍芽，顯示尋找裝置(c78)          }          return BluetoothOffScreen(); //沒開啟時顯示藍芽未開啟跳c41        },      ),    );  }}//藍芽未開啟時，顯示藍芽未開啟圖案，等到藍芽開啟才會繼續動作(跳c78)class BluetoothOffScreen extends StatefulWidget {  @override  _BluetoothOffScreen createState() => _BluetoothOffScreen();}class _BluetoothOffScreen extends State<BluetoothOffScreen> {  @override  Widget build(BuildContext context) {    return Scaffold(      backgroundColor: Colors.blue, //將背景設為藍色      body: Center(        child: Column(          mainAxisSize: MainAxisSize.min,          children: <Widget>[            Icon(Icons.bluetooth_disabled, size: 100.0, color: Colors.white70,),          ],        ),      ),    );  }}class FindDevicesScreen extends StatefulWidget {  // FindDevicesScreen({@required this.device, Key key});  // final BluetoothDevice device;  @override  _FindDevicesScreen createState() => _FindDevicesScreen();}//藍牙開啟後進入到搜尋畫面，按下左下角搜尋，可以在四秒內搜尋附近可用藍芽裝置class _FindDevicesScreen extends State<FindDevicesScreen> {  // _FindDevicesScreen({@required this.device, Key key}); //使用該字段的類型並初始化  // final BluetoothDevice device;  CollectionReference _collection;  @override  void initState() {    super.initState();    _collection = FirebaseFirestore.instance.collection('NTUTLab321');  }  @override  Widget build(BuildContext context) {    return WillPopScope(      onWillPop: _onWillPop,      child: Scaffold(        appBar: AppBar(          title: Text('NTUTLab321點滴、尿袋智慧監控系統-中繼器', style: TextStyle(fontSize: 17),),),        body: RefreshIndicator(          onRefresh: () => FlutterBlue.instance.startScan(timeout: Duration(seconds: 2),),          //開始搜尋，持續4秒          child: SingleChildScrollView(            //建立一個能捲動的Widget            child: Column(              children: <Widget>[                //藍芽裝置清單                StreamBuilder<List<BluetoothDevice>>(                  stream: Stream.periodic(Duration(seconds: 2),).asyncMap((_)                  => FlutterBlue.instance.connectedDevices),                  initialData: [],                  builder: (c, snapshot) =>                      Column(                        children: snapshot.data.map((d) =>                            Padding(                              padding: EdgeInsets.all(20.5),                              child: Column(                                children: <Widget>[                                  Container(                                    height: 450.0,                                    padding: EdgeInsets.all(5),                                    decoration: BoxDecoration(                                        color: Colors.white,                                        borderRadius: BorderRadius.circular(10),                                        boxShadow: [                                          BoxShadow(                                              color: Colors.greenAccent,                                              blurRadius: 20.0,                                              offset: Offset(0, 10))                                        ]),                                    child: Column(                                      children: <Widget>[                                        ListTile(                                            leading: Column(                                              mainAxisAlignment: MainAxisAlignment.center,                                              children: <Widget>[                                                Icon(Icons.devices, color: Colors.greenAccent,),                                                StreamBuilder<DocumentSnapshot>(                                                    stream: _collection.doc('${d.id.toString()}').snapshots(),                                                    builder: (c,snapshot) {                                                      if (snapshot.hasData) {                                                        Map<String, dynamic> documentFields = snapshot.data.data();                                                        return Text( documentFields['judge'],style: TextStyle(fontSize:12.0 ),);                                                      }                                                      else {                                                        return new Text("Loading",style: TextStyle(fontSize:10.0 ),);                                                      }}),                                              ],                                            ),                                            title: Text("裝置編號", overflow: TextOverflow.ellipsis,),                                            subtitle: Text(d.id.toString(), overflow: TextOverflow.ellipsis,),                                            trailing: RaisedButton(                                                      child: Text('忘記此裝置', overflow: TextOverflow.ellipsis,style: TextStyle(color: Colors.redAccent[100],fontWeight: FontWeight.bold,fontSize: 15.0),),                                                      color: Colors.lightBlue[50],                                                      onPressed: () {                                                        return showDialog(context: context,                                                                  builder: (context) =>                                                                      SafeArea(                                                                        child: AlertDialog(                                                                          title: Text('忘記此裝置'),                                                                          content: Text('確定忘記裝置' + d.id.toString() + '的設定?(點選後如需再使用此裝置請重新連線)'),                                                                          actions: <Widget>[                                                                            FlatButton(                                                                              child: Text('是', style: TextStyle(fontSize: 30, color: Colors.red),),                                                                              onPressed: () {_collection.doc('${d.id.toString()}').update({                                                                                'change': 'X',                                                                                'modedescription': '未使用',                                                                                'time': [],                                                                                'alarm': '0',                                                                                'judge': 'unused',                                                                              });                                                                              d.disconnect();                                                                              Navigator.pop(context);                                                                              },                                                                            ),                                                                            FlatButton(                                                                              child: Text('否', style: TextStyle(fontSize: 30),),                                                                              onPressed: () {                                                                                Navigator.of(context).pop(false);                                                                              },                                                                            ),                                                                          ],                                                                        ),                                                                      ),                                                                );                                                                    }                                                    ),                                            // StreamBuilder<BluetoothDeviceState>(                                            //   stream: d.state,                                            //   initialData: BluetoothDeviceState.disconnected,                                            //   builder: (c, snapshot) {                                            //     if (snapshot.data == BluetoothDeviceState.connected) {                                            //       return RaisedButton(                                            //         child: Text('已連線 & 查看', overflow: TextOverflow.ellipsis,),                                            //         color: Colors.greenAccent,                                            //         onPressed: ()                                            //             //=>Navigator.of(context).push(                                            //             //   MaterialPageRoute(                                            //             //       builder: (context)                                            //                     { return DeviceScreen(device: d,);}                                            //             //       ),                                            //             // ),                                            //       );                                            //     }                                            //     return Text(                                            //       snapshot.data.toString(),);                                            //   },                                            // ),                                        ),                                  DeviceScreen(device: d,),                                      ],                                    ),                                  ),                                ],                              ),                            ),                        ).toList(),                      ),                ),                StreamBuilder<List<ScanResult>>(                  stream: FlutterBlue.instance.scanResults,                  initialData: [],                  builder: (c, snapshot) =>                      Column(                        children:                        snapshot.data.map((r) =>                            ScanResultTile(                              result: r,                              onTap: () async {                                r.device.connect();                                //按Connect(第一次連接)，初始化firebase上的資料                                _collection.doc('${r.device.id.toString()}')                                    .set({                                  'change': '0',                                  'modedescription': '初始資料',                                  'time': [],                                  'alarm': '0',                                  'judge': '請點選床室號',                                  'power': '100',                                });                              },                              //=> Navigator.of(context).push(MaterialPageRoute(                              //     builder:(context) {                              // r.device.connect();                              // //按Connect(第一次連接)，初始化firebase上的資料                              // _collection.doc('${r.device.id.toString()}')                              //     .set({                              // 'change': '0',                              // 'modedescription': '初始資料',                              // 'time': [],                              // 'alarm': '0',                              // 'judge': '請點選床室號',                              // 'power': '100',                              // });                              // },                              //   ),                              // ),                            ),                        )                            .toList(),                      ),                ),              ],            ),          ),        ),        floatingActionButton: StreamBuilder<bool>(          //右下角按搜尋及停止的按鈕          stream: FlutterBlue.instance.isScanning,          initialData: false,          builder: (c, snapshot) {            if (snapshot.data) {              return FloatingActionButton(                child: Icon(Icons.stop),                onPressed: () => FlutterBlue.instance.stopScan(),                backgroundColor: Colors.red,              );            } else {              return FloatingActionButton(                child: Icon(Icons.refresh),                onPressed: () =>                    FlutterBlue.instance.startScan(                      timeout: Duration(seconds: 4),                    ),              );            }          },        ),      ),    );  }  //如果要退出整個程式會跳出視窗再次確認，防止程式意外被關閉  Future<bool> _onWillPop() {    return showDialog(      context: context,      builder: (context) =>          SafeArea(            child:            AlertDialog(              title: Text('請勿退出', style: TextStyle(fontSize: 30,),),              content: Row(children: <Widget>[                Text('若真要退出請按(是)後點選 ', style: TextStyle(fontSize: 15,),),                Icon(Icons.home),                Text(' 鍵', style: TextStyle(fontSize: 15,),),              ]),              actions: <Widget>[                Center(                  child: FlatButton(                    child: Text(                      '是', style: TextStyle(fontSize: 25, color: Colors.red),),                    onPressed: () {                      Navigator.of(context).pop(false);                    },                  ),                ),              ],            ),),    );  }}class DeviceScreen extends StatefulWidget {  DeviceScreen({@required this.device, Key key}); //使用該字段的類型並初始化  final BluetoothDevice device;  @override  _DeviceScreen createState() => _DeviceScreen(device: device);}class _DeviceScreen extends State<DeviceScreen> {  _DeviceScreen({@required this.device, Key key}); //使用該字段的類型並初始化  final BluetoothDevice device;  // final cron =new Cron();  @override  Widget build(BuildContext context) {    Future.delayed(Duration(seconds: 10), () {        _discoverServices();    });    return Column(            children: <Widget>[              StreamBuilder<bool>(                stream: device.isDiscoveringServices,                initialData: true,                builder: (c, snapshot) =>                    IndexedStack(                      index: snapshot.data ? 1 : 0,                      children: <Widget>[                        StreamBuilder<BluetoothDeviceState>(                          stream: device.state,                          initialData: BluetoothDeviceState.disconnected,                          builder: (c, snapshot) {                            if (snapshot.data ==                                BluetoothDeviceState.connected) {                              // cron.schedule(Schedule.parse('* */1 * * * *'), //安排每一分鐘紀錄一次值                              //         () async {                              //       print('discover done');                              //       device.discoverServices();                              //     });                              return                                ButtonTheme(                                minWidth: 200.0,                                height: 25.0,                                child: FlatButton(                                  child: Text('連線完成',style: TextStyle(fontSize: 10, ),),                                  color: Colors.tealAccent,                                  onPressed: () {                                    //device.discoverServices();                                  },                              ),                            );                            }                            else {                              return                                ButtonTheme(                                minWidth: 200.0,                                height: 25.0,                                child: FlatButton(                                  child: Text('連線中...',style: TextStyle(fontSize: 10, ),),                                  color: Colors.grey,                                  onPressed: () {},                                ),                              );                            }                          },                        ),                        // IconButton(                        //   icon: SizedBox(                        //     child: CircularProgressIndicator(                        //       valueColor: AlwaysStoppedAnimation(Colors.grey),                        //     ),                        //     width: 18.0,                        //     height: 18.0,                        //   ),                        //   onPressed: null,                        // )                      ],                    ),              ),              StreamBuilder<List<BluetoothService>>(                stream: device.services,                initialData: [],                builder: (c, snapshot) {                  return Column(                    children: _buildServiceTiles(snapshot.data),                  );                },              ),            ],          );  }  List<Widget> _buildServiceTiles(List<BluetoothService> services) {    return services.map((s) =>        ServiceTile(          service: s,          characteristicTiles: s.characteristics.map((c) {           if ('0x${c.uuid.toString().toUpperCase().substring(4, 8)}' == '0x1504')             {c.setNotifyValue(!c.isNotifying);}           if ('0x${c.uuid.toString().toUpperCase().substring(4, 8)}' == '0x1505')             {c.setNotifyValue(!c.isNotifying);}           if ('0x${c.uuid.toString().toUpperCase().substring(4, 8)}' == '0x1514')             {c.setNotifyValue(!c.isNotifying);}          return CharacteristicTile(            characteristic: c,           // onReadPressed: () => c.read(),          //  onNotificationPressed: () => c.setNotifyValue(!c.isNotifying),          );  }          ).toList(),        ),    ).toList();  }  void _discoverServices() {    device.discoverServices();    //     .then((s) {    //   services = s;    //   _updateServices();    //   isServicesDiscovered = true;    // });  }}